<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced. 
    An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3461 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3461.xml">
<!ENTITY RFC4880 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4880.xml">
<!ENTITY RFC5248 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5248.xml">
<!ENTITY RFC5321 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5321.xml">
<!ENTITY RFC5751 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5751.xml">
<!ENTITY RFC3207 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3207.xml">
<!ENTITY RFC6125 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6125.xml">
<!ENTITY RFC6698 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6698.xml">
<!ENTITY RFC7672 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7672.xml">
<!ENTITY RFC1939 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1939.xml">
<!ENTITY RFC3501 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3501.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC8314 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8314.xml">
<!ENTITY I-D.ietf-uta-mta-sts SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-uta-mta-sts-21.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-uta-smtp-require-tls-03" ipr="trust200902">
 <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN" 
    they will automatically be output with "(if approved)" -->

 <!-- ***** FRONT MATTER ***** -->

 <front>

   <title>SMTP Require TLS Option</title>

   <!-- add 'role="editor"' below for the editors if appropriate -->

   <author fullname="Jim Fenton" initials="J.L."
           surname="Fenton">

     <organization>Altmode Networks</organization>

     <address>
       <postal>
         <street> </street>
         <city>Los Altos</city>
         <region>California</region>
         <code>94024</code>
         <country>USA</country>
       </postal>

       <email>fenton@bluepopcorn.net</email>

       <!-- uri and facsimile elements may also be added -->
     </address>
   </author>

   <date year="2018" />

   <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
        in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

   <!-- Meta-data Declarations -->

   <area>General</area>

   <workgroup>Internet Engineering Task Force</workgroup>

   <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->

   <keyword>SMTP</keyword>

   <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->

   <abstract>
     <t>The SMTP STARTTLS option, used in negotiating transport-level
     encryption of SMTP connections, is not as useful from a security
     standpoint as it might be because of its opportunistic nature;
     message delivery is, by default, prioritized over security. This
     document describes an SMTP service extension, REQUIRETLS, and
     message header field, RequireTLS. If the REQUIRETLS option or
     RequireTLS message header field is used when sending a message,
     it asserts a request on the part of the message sender to
     override the default negotiation of TLS, either by requiring that
     TLS be negotiated when the message is relayed, or by requesting
     that recipient-side policy mechanisms such as MTA-STS and DANE be
     ignored when relaying a message for which security is
     unimportant.</t>
   </abstract>

 </front>

 <middle>
   <section title="Introduction">
     <t>The <xref target="RFC5321">SMTP</xref> <xref
     target="RFC3207">STARTTLS service extension</xref> provides a
     means by which an SMTP server and client can establish a
     Transport Layer Security (TLS) protected session for the
     transmission of email messages. By default, TLS is used only upon
     mutual agreement (successful negotiation) of STARTTLS between the
     client and server; if this is not possible, the message is sent
     without transport encryption. Furthermore, it is common practice
     for the client to negotiate TLS even if the SMTP server's
     certificate is invalid.</t>

     <t>Policy mechanisms such as <xref target="RFC7672">DANE</xref>
     and <xref target="I-D.ietf-uta-mta-sts">MTA-STS</xref> may
     impose requirements for the use of TLS for email destined for
     some domains. However, such policies do not allow the sender to
     specify which messages are more sensitive and require
     transport-level encryption, and which ones are less sensitive and
     ought to be relayed even if TLS cannot be negotiated
     successfully.</t>

     <t>The default opportunistic nature of SMTP TLS enables several
     "on the wire" attacks on SMTP security between MTAs. These
     include passive eavesdropping on connections for which TLS is not
     used, interference in the SMTP protocol to prevent TLS from being
     negotiated (presumably accompanied by eavesdropping), and insertion
     of a man-in-the-middle attacker exploiting the lack of
     server authentication by the client. Attacks are described
     in more detail in the Security Considerations section of this
     document.</t>

     <t>REQUIRETLS consists of two mechanisms: an SMTP service
     extension and a message header field. The service extension is
     used to specify that a given message sent during a particular session
     MUST be sent over a TLS-protected session with specified security
     characteristics. It also requires that the SMTP server advertise
     that it supports REQUIRETLS, in effect promising that it
     will honor the requirement to enforce TLS transmission and
     REQUIRETLS support for onward transmission of those messages.</t>

     <t>The RequireTLS message header field is used to convey a
     request to ignore recipient-side policy mechanisms such as
     MTA-STS and DANE, thereby prioritizing delivery over ability to
     negotiate TLS. Unlike the service extension, the RequireTLS
     header field allows the message to transit through one or more
     MTAs that do not support REQUIRETLS.</t>

     <section title="Requirements Language">
       <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
       "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT
       RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
       interpreted as described in BCP 14 <xref target="RFC2119" />
       <xref target="RFC8174" /> when, and only when, they appear in
       all capitals, as shown here.</t>
     </section>
   </section>

   <section anchor="service_extension" title="The REQUIRETLS Service Extension">
     <t><list style="numbers">
       <t>The textual name of the extension is "Require TLS".</t>
       <t>The EHLO keyword value associated with this extension is
       "REQUIRETLS".</t>
       
       <t>One MAIL FROM option is defined
       by this extension.</t>
       
       <t>Two new SMTP status codes are defined by this extension to
       convey error conditions resulting from failure of the client to
       negotiate a TLS connection with the required security and as a
       result of an attempt to send to a server not also supporting
       the REQUIRETLS extension.</t>
     </list></t>

     <t>In order to specify REQUIRETLS treatment for a given message,
     the REQUIRETLS option is specified on the MAIL FROM command when
     that message is transmitted. This option MUST only be specified in the
     context of an SMTP session meeting the security requirements that
     have been specified:
     <list style="symbols">
       <t>The session itself MUST employ TLS transmission.</t>
       <t>The certificate presented by the SMTP server MUST either
       verify successfully in a trust chain leading to a certificate
       trusted by the SMTP client or it MUST verify succesfully using
       DANE as specified in <xref
       target="RFC7672">RFC&nbsp;7672</xref>. For trust chains, the
       choice of trusted (root) certificates is at the discretion of
       the SMTP client.</t>
       <t>Following the negotiation of STARTTLS, the SMTP server MUST
       advertise in the subsequent EHLO response that it supports REQUIRETLS.</t>
     </list>
     </t>
 
   </section>

   <section anchor="header_field" title="The RequireTLS Header Field">

     <t>One new message header field, RequireTLS, is defined by this
     specification. It is used for messages requesting that recipient
     TLS policy (<xref target="I-D.ietf-uta-mta-sts">MTA-STS</xref> or
     <xref target="RFC7672">DANE</xref>) be ignored.</t>
     
   <t>The RequireTLS header field has a single REQUIRED parameter:</t>

     <t><list style="symbols">
      <t>NO - The SMTP client SHOULD attempt to send the message
      regardless of its ability to negotiate STARTTLS with the SMTP
      server, ignoring policy-based mechanisms, if any, asserted by
      the recipient domain. Nevertheless, the client SHOULD negotiate
      STARTTLS with the server if available.</t>
     </list></t>

     <t>More than one instance of the RequireTLS header field MUST
     NOT appear in a given message.</t>

   </section>

   <section anchor="semantics" title="REQUIRETLS Semantics">
     <section anchor="receipt" title="REQUIRETLS Receipt Requirements">
       <t>Upon receipt of the REQUIRETLS option on a MAIL FROM command
       during the receipt of a message, an SMTP server MUST tag that
       message as needing REQUIRETLS handling.</t>

       <t>Upon receipt of a message not specifying the REQUIRETLS
       option on its MAIL FROM command but containing the RequireTLS
       header field in its message header, an SMTP server implementing
       this specification MUST tag that message with the option
       specified in the RequireTLS header field. If the REQUIRETLS
       MAIL FROM parameter is specified, the RequireTLS header field
       MUST be ignored but MAY be included in onward relay of the
       message.</t>

       <t>The manner in which the above tagging takes place is
       implementation-dependent. If the message is being locally
       aliased and redistributed to multiple addresses, all instances
       of the message MUST be tagged in the same manner.</t>
     </section>
     
     <section anchor="sender" title="REQUIRETLS Sender Requirements">
       <section anchor="yestls" title="Sending with TLS Required">
       <t>When sending a message tagged as requiring TLS, the sending
       (client) MTA MUST:

       <list style="numbers">

	 <t>Look up the SMTP server to which the message is to be sent
	 as described in <xref target="RFC5321"></xref> Section
	 5.1.</t>
	 
	 <t>Open an SMTP session with the peer SMTP server using the
	 EHLO verb.</t>
	 
	 <t>Establish a TLS-protected SMTP session with its peer SMTP
	 server and authenticate the server's certificate as specified
	 in <xref target="RFC6125"></xref> or <xref
	 target="RFC6698"></xref> as applicable.</t>

	 <t>Ensure that the response to the subsequent EHLO following
	 establishment of the TLS protection advertises the REQUIRETLS
	 capability.</t>

	 <t>The SMTP client SHOULD also require that meaningfully
	 secure cipher algorithms and key lengths be negotiated with
	 the server. The choices of key lengths and algorithms change
	 over time, so a specific requirement is not presented
	 here.</t>

       </list></t>

       <t>If any of the above steps fail, the client MUST issue a QUIT
       to the server and repeat steps 2-4 with each host on the
       recipient domain's list of MX hosts in an attempt to find a
       mail path that meets the sender's requirements. The client MAY
       send other, unprotected, messages to that server if it has any
       prior to issuing the QUIT. If there are no more MX hosts, the
       client MUST NOT transmit the message to the domain. </t>
       
       <t>Following such a failure, the SMTP client MUST send a
       non-delivery notification to the reverse-path of the failed
       message as described in section 3.6 of <xref target="RFC5321" />. The
       following <xref target="RFC5248">status codes</xref> SHOULD be used:

       <list style="symbols">
	 <t>REQUIRETLS not supported by server: 5.7.x REQUIRETLS
	 needed</t>
	 <t>Unable to establish TLS-protected SMTP session: 5.7.10
	 Encryption needed</t>
       </list></t>

       <t>Refer to <xref target="errors" /> for further requirements regarding
       non-delivery messages.</t>

       <t>If all REQUIRETLS requirements have been met, transmit the
       message, issuing the REQUIRETLS option on the MAIL FROM command
       with the required option(s), if any.</t>

       </section>
       <section anchor="maytls" title="Sending with TLS Optional">
	 <t>Messages tagged RequireTLS: NO are handled as
	 follows. When sending such a message, the sending (client)
	 MTA MUST:
	 <list style="symbols">
	   <t>Look up the SMTP server to which the message is to be
	   sent as described in <xref target="RFC5321"></xref> Section
	   5.1.</t>
	   
	   <t>Open an SMTP session with the peer SMTP server using the
	   EHLO verb. Attempt to negotiate STARTTLS if possible, and
	   follow any policy published by the recipient domain, but do
	   not fail if this is unsuccessful.</t>
	   
	 </list>
	 </t>

	 <t>Some SMTP servers may be configured to require STARTTLS
	 connections as a matter of policy and not accept messages in
	 the absence of STARTTLS. A non-delivery notification MUST be
	 returned to the sender if message relay fails due to an
	 inability to negotiate STARTTLS when required by the
	 server.</t>

	 <t>Since messages tagged with RequireTLS: NO will sometimes
	 be sent to SMTP servers not supporting REQUIRETLS, that
	 option will not be uniformly observed by all SMTP relay
	 hops.</t>

       </section>
       
     </section>

     <section anchor="submission" title="REQUIRETLS Submission">
       <t>An MUA or other agent making the initial introduction of a
       message has authority to decide whether to require TLS. When
       TLS is to be required, it MUST do so by negotiating STARTTLS
       and REQUIRETLS and include the REQUIRETLS option on the MAIL
       FROM command, as is done for message relay.</t>

       <t>When TLS is not to be required, the sender MUST include the
       RequireTLS header field in the message. SMTP servers
       implementing this specification MUST interpret this header
       field as described in <xref target="receipt" />.</t>

       <t>In either case, the decision whether to specify REQUIRETLS
       MAY be done based on a user interface selection or based on a
       ruleset or other policy. The manner in which the decision to
       require TLS is made is implementation-dependent and is beyond
       the scope of this specification.</t>
     </section>

     <section anchor="delivery" title="Delivery of REQUIRETLS messages">
       <t>Messages are usually retrieved by end users using protocols
       other than SMTP such as <xref target="RFC3501">IMAP</xref>,
       <xref target="RFC1939">POP</xref>, or web mail systems. Mail
       delivery agents supporting the REQUIRETLS SMTP option SHOULD
       observe the guidelines in <xref target="RFC8314" />.</t>
     </section>
   </section>

     <section anchor="errors" title="Non-delivery message handling">

       <t>Non-delivery ("bounce") messages usually contain important
       metadata about the message to which they refer, including the
       original message header. They therefore MUST be protected in
       the same manner as the original message. All non-delivery
       messages resulting from messages with the REQUIRETLS SMTP
       option, whether resulting from a REQUIRETLS error or some
       other, MUST also specify the REQUIRETLS SMTP option unless
       redacted as described below.</t>

       <t>The path from the origination of an error bounce message
       back to the MAIL FROM address may not share the same REQUIRETLS
       support as the forward path. Therefore, users requiring TLS are
       advised to make sure that they are capable of receiving mail
       using REQUIRETLS as well. Otherwise, such non-delivery messages
       will be lost.</t>

       <t>If a REQUIRETLS message is bounced, the server MUST behave
       as if RET=HDRS was present as described in <xref
       target="RFC3461"></xref>. If both RET=FULL and REQUIRETLS are
       present, the RET=FULL MUST be disregarded and MAY be
       transformed to RET=HDRS on relay. The SMTP client for a
       REQUIRETLS bounce message MUST use an empty MAIL FROM
       return-path as required by <xref target="RFC5321"></xref>. When
       the MAIL FROM return-path is empty, the REQUIRETLS parameter
       SHOULD NOT cause a bounce message to be discarded even if the
       next-hop relay does not advertise REQUIRETLS.</t>

       <t>Senders of messages requiring TLS are advised to consider
       the possibility that bounce messages will be lost as a result
       of REQUIRETLS return path failure, and that some information
       could be leaked if a bounce message is not able to be
       transmitted with REQUIRETLS.</t>
     </section>

     <section anchor="lists" title="Mailing list considerations">

       <t>Mailing lists, upon receipt of a message, originate new
       messages to list addresses. This is distinct from an aliasing
       operation that redirects the original message, in some cases to
       multiple recipients. The requirement to preserve the REQUIRETLS
       tag therefore does not necessarily extend to mailing lists,
       although the inclusion of the RequireTLS header field MAY cause
       messages sent to mailing lists to inherit this
       characteristic. REQUIRETLS users SHOULD be made aware of this
       limitation so that they use caution when sending to mailing
       lists and do not assume that REQUIRETLS applies to messages
       from the list operator to list members.</t>

       <t>Mailing list operators MAY apply REQUIRETLS requirements in
       incoming messages to the resulting messages they originate. If
       this is done, they SHOULD also apply these requirements to
       administrative traffic, such as messages to moderators
       requesting approval of messages.</t>
     </section>


   <!-- Possibly a 'Contributors' section ... -->

   <section anchor="IANA" title="IANA Considerations">
     <t>If published as an RFC, this draft requests the addition of
     the following keyword to the <xref target="MailParams">SMTP
     Service Extensions Registry</xref>:</t>

     <figure align="left"><artwork align="left">
Textual name:               RequireTLS
EHLO keyword value:         REQUIRETLS
Syntax and parameters:      (no parameters)
Additional SMTP verbs:      none
MAIL and RCPT parameters:   REQUIRETLS parameter on MAIL
Behavior:                   Use of the REQUIRETLS parameter on the
                            MAIL verb causes that message to require
                            the use of TLS and tagging with REQUIRETLS
                            for all onward relay.
Command length increment:   11 characters
       </artwork></figure>
			      

      <t>If published as an RFC, this draft requests the addition of an
     entry to the <xref
     target="SMTPStatusCodes">Simple Mail Transfer Protocol (SMTP) Enhanced Status
     Codes Registry</xref>:</t>

     <figure align="left"><artwork align="left">

Code:                       5.7.YYY
Sample Text:                REQUIRETLS support required
Associated basic status code:  530
Description:                This indicates that the message was not
                            able to be forwarded because it was
                            received with a REQUIRETLS requirement
                            and none of the SMTP servers to which
                            the message should be forwarded provide
                            this support.
Reference:                  (this document)
Submitter:                  J. Fenton
Change controller:          IESG
       </artwork></figure>

     <t>If published as an RFC, this draft requests the addition of
     an entry to the <xref
     target="PermMessageHeaderFields">Permanent Message Header Field
     Names Registry</xref>:</t>

     <figure align="left"><artwork align="left">
Header field name:          RequireTLS
Applicable protocol:        mail
Status:                     provisional
Author/change controller:   IETF UTA Working Group
Specification document:     (this document)
     </artwork></figure>
       

     <t>This section is to be updated for publication by
     the RFC Editor.</t>
   </section>

   <section anchor="Security" title="Security Considerations">
       <t>The purpose of REQUIRETLS is to improve communications
       security for email by giving the originator of a message an
       expectation that it will be transmitted in an encrypted form
       "over the wire". When used, REQUIRETLS changes the traditional
       behavior of email transmission, which favors delivery over the
       ability to send email messages using transport-layer security,
       to one in which requested security takes precedence over
       delivery and domain-level policy.</t>

       <t>The following considerations apply to the REQUIRETLS service
       extension but not the RequireTLS header field, since messages
       specifying the header field are less concerned with transport
       security.</t>

       <section anchor="Passive" title="Passive attacks">
	 <t>REQUIRETLS is generally effective against passive
	 attackers who are merely trying to eavesdrop on an SMTP
	 exchange between an SMTP client and server. This assumes, of
	 course, the cryptographic integrity of the TLS connection
	 being used.</t>
       </section>

       <section anchor="Active" title="Active attacks">

	 <t>Active attacks against TLS encrypted SMTP connections can
	 take many forms. One such attack is to interfere in the
	 negotiation by changing the STARTTLS command to something
	 illegal such as XXXXXXXX. This causes TLS negotiation to fail
	 and messages to be sent in the clear, where they can be
	 intercepted. REQUIRETLS detects the failure of STARTTLS and
	 declines to send the message rather than send it
	 insecurely.</t>

	 <t>A second form of attack is a man-in-the-middle attack
	 where the attacker terminates the TLS connection rather than
	 the intended SMTP server. This is possible when, as is
	 commonly the case, the SMTP client either does not verify the
	 server's certificate or establishes the connection even when
	 the verification fails. REQUIRETLS requires successful
	 certificate validation before sending the message.</t>

	 <t>Another active attack involves the spoofing of DNS MX
	 records of the recipient domain. An attacker having this
	 capability could cause the message to be redirected to a mail
	 server under the attacker's own control, which would
	 presumably have a valid certificate. REQUIRETLS does not
	 address this attack.</t>

       </section>

       <section anchor="badactor" title="Bad Actor MTAs">

	 <t>A bad-actor MTA along the message transmission path could
	 misrepresent its support of REQUIRETLS and/or actively strip
	 REQUIRETLS tags from messages it handles. However, since
	 intermediate MTAs are already trusted with the cleartext of
	 messages they handle, and are not part of the threat model
	 for transport-layer security, they are also not part of the
	 threat model for REQUIRETLS.</t>
	 
	 <t>It should be reemphasized that since SMTP TLS is a
	 transport-layer security protocol, messages sent using
	 REQUIRETLS are not encrypted end-to-end and are visible to
	 MTAs that are part of the message delivery path. Messages
	 containing sensitive information that MTAs should not have
	 access to MUST be sent using end-to-end content encryption
	 such as <xref target="RFC4880">OpenPGP</xref> or <xref
	 target="RFC5751">S/MIME</xref>.</t>
       </section>
   </section>

   <section anchor="acknowledgements" title="Acknowledgements">
     <t>The author would like to acknowledge many helpful suggestions
     on the ietf-smtp and uta mailing lists, in particular those of
     Viktor Dukhovni, Chris Newman, Tony Finch, Jeremy Harris, Arvel
     Hathcock, John Klensin, John Levine, Rolf Sonneveld, and Per
     Thorsheim.</t>

   </section>

     <section anchor="history" title="Revision History">

       <t>To be removed by RFC Editor upon publication as an RFC.</t>

       <section title="Changes since -02 Draft">
	 <t><list style="symbols">
	   <t>More complete documentation for IANA registration requests.</t>
	   <t>Changed bounce handling to use RET parameters of RFC
	   3461, along with slightly more liberal transmission of
	   bounces even if REQUIRETLS can't be negotiated.</t>
	 </list></t>
       </section>
       
       <section title="Changes since -01 Draft">
	 <t><list style="symbols">
	   <t>Converted DEEP references to RFC 8314.</t>
	   <t>Removed REQUIRETLS options: CHAIN, DANE, and DNSSEC.</t>
	   <t>Editorial corrections, notably making the header field
	   name consistent (RequireTLS rather than Require-TLS).</t>
	 </list></t>
       </section>
       
       <section title="Changes since -00 Draft">
	 <t><list style="symbols">
	   <t>Created new header field, Require-TLS, for use by "NO"
	   option.</t>
	   <t>Removed "NO" option from SMTP service extension.</t>
	   <t>Recommend DEEP requirements for delivery of messages
	   requiring TLS.</t>
	   <t>Assorted copy edits</t>
	 </list></t>
       </section>


       <section title="Changes since fenton-03 Draft">
	 <t><list style="symbols">
	   <t>Wording improvements from Rolf Sonneveld review 22 July
	   2017</t>
	   <t>A few copy edits</t>
	   <t>Conversion from individual to UTA WG draft</t>
	 </list></t>
       </section>

       <section title="Changes Since -02 Draft">
	 <t><list style="symbols">
	   <t>Incorporation of "MAY TLS" functionality as
	   REQUIRETLS=NO per suggestion on UTA WG mailing list.</t>
	   <t>Additional guidance on bounce messages</t>
	 </list></t>
       </section>

       <section title="Changes Since -01 Draft">
	 <t><list style="symbols">
	   <t>Specified retries when multiple MX hosts exist for a
	   given domain.</t>
	   <t>Clarified generation of non-delivery messages</t>
	   <t>Specified requirements for application of REQUIRETLS to mail forwarders
	   and mailing lists.</t>
	   <t>Clarified DNSSEC requirements to include MX lookup only.</t>
	   <t>Corrected terminology regarding message retrieval
	   vs. delivery.</t>
	   <t>Changed category to standards track.</t>

	 </list></t>
       </section>
       <section title="Changes Since -00 Draft">
	 
	 <t><list style="symbols">
	 <t>Conversion of REQUIRETLS from an SMTP verb to a MAIL FROM
	 parameter to better associate REQUIRETLS requirements with
	 transmission of individual messages.</t>

	 <t>Addition of an option to require DNSSEC lookup of the
	 remote mail server, since this affects the common name of the
	 certificate that is presented.</t>

	 <t>Clarified the wording to more clearly state that TLS
	 sessions must be established and not simply that STARTTLS is
	 negotiated.</t>

	 <t>Introduced need for minimum encryption standards (key
	 lengths and algorithms)</t>

	 <t>Substantially rewritten Security Considerations section</t>

	 
       </list></t>
       

     </section>
     

   </section>

 </middle>

 <!--  *****BACK MATTER ***** -->

 <back>
   <!-- References split into informative and normative -->

   <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
    2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
       (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    directory as the including file. You can also define the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->

   <references title="Normative References">
     <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
     &RFC2119;
     &RFC3207;
     &RFC3461;
     &RFC5248;
     &RFC5321;
     &RFC6125;
     &RFC6698;
     &RFC8174;
     &RFC8314;

     <reference anchor="MailParams"
                target="http://www.iana.org/assignments/mail-parameters">
       <front>
         <title>IANA Mail Parameters</title>

         <author>
           <organization>Internet Assigned Numbers Authority (IANA)</organization>
         </author>

         <date year="2007" />
       </front>
     </reference>
     <reference anchor="SMTPStatusCodes"
                target="http://www.iana.org/assignments/smtp-enhanced-status-codes">
       <front>
         <title>Simple Mail Transfer Protocol (SMTP) Enhanced Status
	 Codes Registry</title>

         <author>
           <organization>Internet Assigned Numbers Authority (IANA)</organization>
         </author>

         <date year="2008" />
       </front>
     </reference>

          <reference anchor="PermMessageHeaderFields"
                target="https://www.iana.org/assignments/message-headers/message-headers.xhtml#perm-headers">
       <front>
         <title>Permanent Message Header Field Names Registry</title>

         <author>
           <organization>Internet Assigned Numbers Authority (IANA)</organization>
         </author>

         <date year="2004" />
       </front>
     </reference>
 

   </references>

   <references title="Informative References">
     <!-- Here we use entities that we defined at the beginning. -->

     &RFC1939;
     &RFC3501;
     &RFC4880;
     &RFC5751;
     &RFC7672;
     &I-D.ietf-uta-mta-sts;
     
     <!-- A reference written by by an organization not a person. -->

   </references>

 </back>
</rfc>
